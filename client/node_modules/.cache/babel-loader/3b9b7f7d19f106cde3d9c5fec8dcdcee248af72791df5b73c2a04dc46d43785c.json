{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\OneDrive\\\\Documents\\\\Project-1\\\\interview-chat-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction App() {\n  _s();\n  const [stream, setStream] = useState(null);\n  const [myId, setMyId] = useState(\"\");\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [hasJoined, setHasJoined] = useState(false);\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n\n  // Get camera and mic\n  useEffect(() => {\n    let isMounted = true;\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      if (isMounted) {\n        setStream(currentStream);\n        if (myVideo.current) {\n          myVideo.current.srcObject = currentStream;\n        }\n      }\n    }).catch(err => console.error(\"Error accessing media devices\", err));\n    return () => {\n      isMounted = false;\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // Socket event listeners\n  useEffect(() => {\n    if (!stream) return;\n    socket.on(\"connect\", () => {\n      setMyId(socket.id);\n    });\n    socket.on(\"user-joined\", userId => {\n      callUser(userId);\n    });\n    socket.on(\"receive-signal\", ({\n      signal,\n      callerId\n    }) => {\n      const peer = new Peer({\n        initiator: false,\n        trickle: false,\n        stream: stream\n      });\n      peer.on(\"signal\", signal => {\n        socket.emit(\"return-signal\", {\n          signal,\n          callerId\n        });\n      });\n      peer.on(\"stream\", currentStream => {\n        if (userVideo.current) {\n          userVideo.current.srcObject = currentStream;\n        }\n      });\n      peer.signal(signal);\n      connectionRef.current = peer;\n      setCallAccepted(true);\n    });\n    socket.on(\"receive-return-signal\", ({\n      signal\n    }) => {\n      var _connectionRef$curren;\n      (_connectionRef$curren = connectionRef.current) === null || _connectionRef$curren === void 0 ? void 0 : _connectionRef$curren.signal(signal);\n    });\n    return () => {\n      socket.off(\"connect\");\n      socket.off(\"user-joined\");\n      socket.off(\"receive-signal\");\n      socket.off(\"receive-return-signal\");\n    };\n  }, [stream]);\n  function joinCall() {\n    if (!hasJoined) {\n      const roomId = \"test-room\"; // Use a unique room if needed\n      socket.emit(\"join-call\", roomId);\n      setHasJoined(true);\n    }\n  }\n  function callUser(userId) {\n    if (!stream) return;\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"send-signal\", {\n        userToSignal: userId,\n        signal,\n        callerId: myId\n      });\n    });\n    peer.on(\"stream\", currentStream => {\n      if (userVideo.current) {\n        userVideo.current.srcObject = currentStream;\n      }\n    });\n    connectionRef.current = peer;\n    setCallAccepted(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Video Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinCall,\n      disabled: hasJoined,\n      children: \"Join Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 10,\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        playsInline: true,\n        muted: true,\n        ref: myVideo,\n        autoPlay: true,\n        style: {\n          width: \"300px\",\n          backgroundColor: \"#000\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), callAccepted && /*#__PURE__*/_jsxDEV(\"video\", {\n        playsInline: true,\n        ref: userVideo,\n        autoPlay: true,\n        style: {\n          width: \"300px\",\n          backgroundColor: \"#000\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"93lgpAJtMlC9CgWD5Z8Wl6J6+XY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","socket","App","_s","stream","setStream","myId","setMyId","callAccepted","setCallAccepted","hasJoined","setHasJoined","myVideo","userVideo","connectionRef","isMounted","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","catch","err","console","error","getTracks","forEach","track","stop","on","id","userId","callUser","signal","callerId","peer","initiator","trickle","emit","_connectionRef$curren","off","joinCall","roomId","userToSignal","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","display","gap","marginTop","playsInline","muted","ref","autoPlay","width","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Acer/OneDrive/Documents/Project-1/interview-chat-app/client/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nfunction App() {\r\n  const [stream, setStream] = useState(null);\r\n  const [myId, setMyId] = useState(\"\");\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [hasJoined, setHasJoined] = useState(false);\r\n\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n\r\n  // Get camera and mic\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then((currentStream) => {\r\n        if (isMounted) {\r\n          setStream(currentStream);\r\n          if (myVideo.current) {\r\n            myVideo.current.srcObject = currentStream;\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"Error accessing media devices\", err));\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      if (stream) {\r\n        stream.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Socket event listeners\r\n  useEffect(() => {\r\n    if (!stream) return;\r\n\r\n    socket.on(\"connect\", () => {\r\n      setMyId(socket.id);\r\n    });\r\n\r\n    socket.on(\"user-joined\", (userId) => {\r\n      callUser(userId);\r\n    });\r\n\r\n    socket.on(\"receive-signal\", ({ signal, callerId }) => {\r\n      const peer = new Peer({\r\n        initiator: false,\r\n        trickle: false,\r\n        stream: stream\r\n      });\r\n\r\n      peer.on(\"signal\", (signal) => {\r\n        socket.emit(\"return-signal\", { signal, callerId });\r\n      });\r\n\r\n      peer.on(\"stream\", (currentStream) => {\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = currentStream;\r\n        }\r\n      });\r\n\r\n      peer.signal(signal);\r\n      connectionRef.current = peer;\r\n      setCallAccepted(true);\r\n    });\r\n\r\n    socket.on(\"receive-return-signal\", ({ signal }) => {\r\n      connectionRef.current?.signal(signal);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"connect\");\r\n      socket.off(\"user-joined\");\r\n      socket.off(\"receive-signal\");\r\n      socket.off(\"receive-return-signal\");\r\n    };\r\n  }, [stream]);\r\n\r\n  function joinCall() {\r\n    if (!hasJoined) {\r\n      const roomId = \"test-room\"; // Use a unique room if needed\r\n      socket.emit(\"join-call\", roomId);\r\n      setHasJoined(true);\r\n    }\r\n  }\r\n\r\n  function callUser(userId) {\r\n    if (!stream) return;\r\n\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream: stream\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"send-signal\", { userToSignal: userId, signal, callerId: myId });\r\n    });\r\n\r\n    peer.on(\"stream\", (currentStream) => {\r\n      if (userVideo.current) {\r\n        userVideo.current.srcObject = currentStream;\r\n      }\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n    setCallAccepted(true);\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>Video Chat</h2>\r\n      <button onClick={joinCall} disabled={hasJoined}>Join Call</button>\r\n      <div style={{ display: \"flex\", gap: 10, marginTop: 20 }}>\r\n        <video playsInline muted ref={myVideo} autoPlay style={{ width: \"300px\", backgroundColor: \"#000\" }} />\r\n        {callAccepted && (\r\n          <video playsInline ref={userVideo} autoPlay style={{ width: \"300px\", backgroundColor: \"#000\" }} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}